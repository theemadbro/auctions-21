// <auto-generated />
using beltfix.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace beltfix.Migrations
{
    [DbContext(typeof(beltfixContext))]
    [Migration("20180620231355_migration")]
    partial class migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("beltfix.Models.Auctions", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("bid");

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.ComputedColumn);

                    b.Property<string>("description")
                        .IsRequired();

                    b.Property<DateTime>("endDate");

                    b.Property<string>("itemname")
                        .IsRequired();

                    b.Property<int>("sellerid");

                    b.Property<DateTime>("updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.ComputedColumn);

                    b.HasKey("id");

                    b.HasIndex("sellerid");

                    b.ToTable("auctions");
                });

            modelBuilder.Entity("beltfix.Models.Bidders", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("auctionid");

                    b.Property<int>("bidamount");

                    b.Property<int>("bidderid");

                    b.HasKey("id");

                    b.HasIndex("auctionid");

                    b.HasIndex("bidderid");

                    b.ToTable("bidders");
                });

            modelBuilder.Entity("beltfix.Models.Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("created_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.ComputedColumn);

                    b.Property<string>("email")
                        .IsRequired();

                    b.Property<string>("first_name")
                        .IsRequired();

                    b.Property<string>("last_name")
                        .IsRequired();

                    b.Property<string>("password")
                        .IsRequired();

                    b.Property<DateTime>("updated_at")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.ComputedColumn);

                    b.Property<int>("wallet");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("beltfix.Models.Auctions", b =>
                {
                    b.HasOne("beltfix.Models.Users", "seller")
                        .WithMany("auctions")
                        .HasForeignKey("sellerid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("beltfix.Models.Bidders", b =>
                {
                    b.HasOne("beltfix.Models.Auctions", "auction")
                        .WithMany("bidders")
                        .HasForeignKey("auctionid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("beltfix.Models.Users", "bidder")
                        .WithMany()
                        .HasForeignKey("bidderid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
